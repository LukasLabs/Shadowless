<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title><%= settings.name %> - Admin Dashboard</title>
    <link rel="icon" type="image/png" href="https://i.imgur.com/GY3cXet.png">
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet"/>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        .animate-fade-in {
            animation: fadeIn 0.3s ease-out forwards;
        }
        .animate-pulse-slow {
            animation: pulse 3s infinite ease-in-out;
        }
        .shadow-glow {
            box-shadow: 0 0 15px rgba(99, 102, 241, 0.3);
        }
        .gradient-text {
            background: linear-gradient(45deg, #6366f1, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .bg-grid {
            background-image: radial-gradient(rgba(99, 102, 241, 0.1) 1px, transparent 1px);
            background-size: 20px 20px;
        }
        .card-hover:hover {
            transform: translateY(-3px);
        }
        .tooltip {
            position: relative;
        }
        .tooltip:hover::after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(15, 15, 15, 0.9);
            color: white;
            padding: 0.5rem;
            border-radius: 0.5rem;
            font-size: 0.75rem;
            white-space: nowrap;
            z-index: 10;
            border: 1px solid rgba(99, 102, 241, 0.3);
        }
    </style>
</head>
<body class="bg-black text-white min-h-screen overflow-x-hidden">
    <div class="flex">
        <!-- Sidebar -->
        <%- include('../components/admin-navigation') %>
        
        <!-- Main Content -->
        <main class="flex-1 ml-72 p-8">
            <!-- Welcome Section -->
            <div class="relative rounded-2xl overflow-hidden mb-8 animate-fade-in shadow-glow">
                <div class="absolute inset-0 bg-gradient-to-r from-indigo-600/20 to-purple-600/20 backdrop-blur-sm bg-grid"></div>
                <div class="relative p-8">
                    <h1 class="text-4xl font-bold mb-2 gradient-text">Server Management</h1>
                    <p class="text-gray-300">Control and monitor all servers across your platform.</p>
                </div>
            </div>

            <!-- Notification System (Hidden by default) -->
            <div id="notification" class="hidden fixed top-6 right-6 z-50 p-4 rounded-xl backdrop-blur-sm border border-indigo-500/30 shadow-glow animate-fade-in">
                <div class="flex items-center space-x-3">
                    <i id="notificationIcon" class="text-xl"></i>
                    <p id="notificationMessage" class="font-medium"></p>
                </div>
            </div>

            <!-- Analytics Overview -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <!-- Total Servers -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl p-6 hover:bg-gray-900/90 transition-all duration-300 animate-fade-in card-hover shadow-lg">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-xl bg-indigo-500/10 flex items-center justify-center">
                                <i class="fas fa-server text-indigo-500"></i>
                            </div>
                            <span class="text-gray-300">Total Servers</span>
                        </div>
                        <span id="totalServers" class="text-3xl font-bold gradient-text">0</span>
                    </div>
                    <div class="w-full h-2 bg-gray-800 rounded-full overflow-hidden">
                        <div id="serversBar" class="h-full bg-indigo-500 transition-all duration-500" style="width: 0%"></div>
                    </div>
                </div>

                <!-- Active Servers -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl p-6 hover:bg-gray-900/90 transition-all duration-300 animate-fade-in card-hover shadow-lg">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-xl bg-green-500/10 flex items-center justify-center">
                                <i class="fas fa-check-circle text-green-500"></i>
                            </div>
                            <span class="text-gray-300">Active Servers</span>
                        </div>
                        <span id="activeServers" class="text-3xl font-bold gradient-text">0</span>
                    </div>
                    <div class="w-full h-2 bg-gray-800 rounded-full overflow-hidden">
                        <div id="activeServersBar" class="h-full bg-green-500 transition-all duration-500" style="width: 0%"></div>
                    </div>
                </div>

                <!-- Suspended Servers -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl p-6 hover:bg-gray-900/90 transition-all duration-300 animate-fade-in card-hover shadow-lg">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-xl bg-yellow-500/10 flex items-center justify-center">
                                <i class="fas fa-pause text-yellow-500"></i>
                            </div>
                            <span class="text-gray-300">Suspended</span>
                        </div>
                        <span id="suspendedServers" class="text-3xl font-bold gradient-text">0</span>
                    </div>
                    <div class="w-full h-2 bg-gray-800 rounded-full overflow-hidden">
                        <div id="suspendedServersBar" class="h-full bg-yellow-500 transition-all duration-500" style="width: 0%"></div>
                    </div>
                </div>

                <!-- System Load -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl p-6 hover:bg-gray-900/90 transition-all duration-300 animate-fade-in card-hover shadow-lg">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-xl bg-purple-500/10 flex items-center justify-center">
                                <i class="fas fa-tachometer-alt text-purple-500"></i>
                            </div>
                            <span class="text-gray-300">System Load</span>
                        </div>
                        <span id="systemLoad" class="text-3xl font-bold gradient-text">0%</span>
                    </div>
                    <div class="w-full h-2 bg-gray-800 rounded-full overflow-hidden">
                        <div id="systemLoadBar" class="h-full bg-purple-500 transition-all duration-500" style="width: 0%"></div>
                    </div>
                </div>
            </div>

            <!-- Server Management -->
            <div class="mb-8">
                <div class="flex items-center justify-between mb-6 flex-wrap gap-4">
                    <h2 class="text-2xl font-bold gradient-text">Server Management</h2>
                    <div class="flex items-center space-x-4">
                        <div class="relative">
                            <input type="text" id="searchInput" placeholder="Search servers..." class="bg-gray-900/80 border border-indigo-500/20 rounded-xl px-4 py-2 pl-10 focus:outline-none focus:ring-2 focus:ring-indigo-500/20">
                            <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        </div>
                        <div class="flex space-x-2">
                            <button id="bulkSuspendBtn" class="px-4 py-2 rounded-xl bg-yellow-600 hover:bg-yellow-700 text-white transition-all duration-300 flex items-center space-x-2">
                                <i class="fas fa-pause"></i>
                                <span>Bulk Suspend</span>
                            </button>
                            <button id="bulkUnsuspendBtn" class="px-4 py-2 rounded-xl bg-green-600 hover:bg-green-700 text-white transition-all duration-300 flex items-center space-x-2">
                                <i class="fas fa-play"></i>
                                <span>Bulk Unsuspend</span>
                            </button>
                            <button onclick="createServer()" class="px-4 py-2 rounded-xl bg-indigo-600 hover:bg-indigo-700 text-white transition-all duration-300 flex items-center space-x-2 shadow-lg shadow-indigo-500/20">
                                <i class="fas fa-plus"></i>
                                <span>Create Server</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Filters & Actions -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl p-4 mb-6 animate-fade-in">
                    <div class="flex flex-wrap items-center justify-between gap-4">
                        <div class="flex items-center space-x-4">
                            <div class="relative">
                                <select id="statusFilter" class="bg-gray-800 rounded-xl px-4 py-2 pr-10 appearance-none focus:outline-none focus:ring-2 focus:ring-indigo-500/20">
                                    <option value="all">All Status</option>
                                    <option value="active">Active</option>
                                    <option value="suspended">Suspended</option>
                                </select>
                                <i class="fas fa-chevron-down absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none"></i>
                            </div>
                            <div class="relative">
                                <select id="resourceFilter" class="bg-gray-800 rounded-xl px-4 py-2 pr-10 appearance-none focus:outline-none focus:ring-2 focus:ring-indigo-500/20">
                                    <option value="all">All Resources</option>
                                    <option value="high-ram">High RAM</option>
                                    <option value="high-cpu">High CPU</option>
                                    <option value="high-disk">High Disk</option>
                                </select>
                                <i class="fas fa-chevron-down absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none"></i>
                            </div>
                        </div>
                        <div>
                            <span class="text-sm text-gray-400">Showing <span id="filteredCount">0</span> of <span id="totalCount">0</span> servers</span>
                        </div>
                    </div>
                </div>

                <!-- Servers Table -->
                <div class="bg-gray-900/80 border border-indigo-500/20 rounded-xl overflow-hidden animate-fade-in shadow-lg">
                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead>
                                <tr class="bg-gray-800/80">
                                    <th class="p-4 text-left">
                                        <div class="flex items-center space-x-2">
                                            <input type="checkbox" id="selectAll" class="rounded bg-gray-700 border-gray-600 text-indigo-500 focus:ring-indigo-500/50">
                                            <span>Server</span>
                                        </div>
                                    </th>
                                    <th class="p-4 text-left">Owner</th>
                                    <th class="p-4 text-left">Resources</th>
                                    <th class="p-4 text-left">Status</th>
                                    <th class="p-4 text-left">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="serversTableBody">
                                <!-- Server rows will be dynamically populated -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="flex items-center justify-between mt-6">
                    <div class="text-sm text-gray-400">
                        Showing <span id="currentRange">1-10</span> of <span id="totalItems">100</span> servers
                    </div>
                    <div class="flex items-center space-x-2">
                        <button id="prevPage" class="px-3 py-1 rounded-lg bg-gray-800 hover:bg-gray-700 disabled:opacity-50 transition-all duration-300">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <div id="paginationNumbers" class="flex items-center space-x-1">
                            <!-- Pagination numbers go here -->
                        </div>
                        <button id="nextPage" class="px-3 py-1 rounded-lg bg-gray-800 hover:bg-gray-700 disabled:opacity-50 transition-all duration-300">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Delete Server Modal -->
    <div id="deleteServerModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
        <div class="bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4">
            <h3 class="text-xl font-semibold text-white mb-4">Delete Server</h3>
            <p class="text-gray-400 mb-6">Are you sure you want to delete this server? This action cannot be undone.</p>
            <div class="flex justify-end space-x-4">
                <button onclick="closeDeleteModal()" class="px-4 py-2 rounded-lg bg-gray-700 hover:bg-gray-600 text-white transition-all">
                    Cancel
                </button>
                <button onclick="deleteServer()" class="px-4 py-2 rounded-lg bg-red-600 hover:bg-red-700 text-white transition-all">
                    Delete
                </button>
            </div>
        </div>
    </div>

    <!-- Bulk Action Modal -->
    <div id="bulkActionModal" class="hidden fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50">
        <div class="bg-gray-900 border border-indigo-500/20 rounded-xl p-6 w-full max-w-md animate-fade-in shadow-glow">
            <div class="flex items-center justify-between mb-4">
                <h2 id="bulkActionTitle" class="text-xl font-bold gradient-text">Bulk Action</h2>
                <button onclick="closeBulkActionModal()" class="text-gray-400 hover:text-white transition-all">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="mb-6">
                <div class="flex items-center justify-center w-16 h-16 mx-auto mb-4 rounded-full bg-indigo-500/10">
                    <i id="bulkActionIcon" class="text-indigo-500 text-2xl"></i>
                </div>
                <p id="bulkActionMessage" class="text-gray-300 mb-2 text-center">Are you sure you want to perform this action?</p>
                <p class="text-gray-400 text-sm text-center">This will affect <span id="selectedCount">0</span> selected servers.</p>
            </div>
            <div class="flex justify-end space-x-3">
                <button onclick="closeBulkActionModal()" class="px-4 py-2 rounded-lg bg-gray-800 hover:bg-gray-700 transition-all duration-300">Cancel</button>
                <button id="confirmBulkAction" class="px-4 py-2 rounded-lg transition-all duration-300">Confirm</button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let allServers = [];
        let filteredServers = [];
        let selectedServers = new Set();
        let currentPage = 1;
        let itemsPerPage = 10;
        let serverToDelete = null;
        let bulkActionType = null;

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadServers();
            setupEventListeners();
            setupAnimations();
        });

        // Set up event listeners
        function setupEventListeners() {
            document.getElementById('selectAll').addEventListener('change', toggleSelectAll);
            document.getElementById('searchInput').addEventListener('input', filterServers);
            document.getElementById('statusFilter').addEventListener('change', filterServers);
            document.getElementById('resourceFilter').addEventListener('change', filterServers);
            document.getElementById('prevPage').addEventListener('click', () => changePage(currentPage - 1));
            document.getElementById('nextPage').addEventListener('click', () => changePage(currentPage + 1));
            document.getElementById('bulkSuspendBtn').addEventListener('click', () => openBulkActionModal('suspend'));
            document.getElementById('bulkUnsuspendBtn').addEventListener('click', () => openBulkActionModal('unsuspend'));
            document.getElementById('confirmBulkAction').addEventListener('click', executeBulkAction);
        }

        // Load initial animations
        function setupAnimations() {
            // Random system load animation for demo
            setInterval(() => {
                const load = Math.floor(Math.random() * 30) + 20;
                document.getElementById('systemLoad').textContent = load + '%';
                document.getElementById('systemLoadBar').style.width = load + '%';
            }, 5000);
        }

        // Load servers data
        async function loadServers() {
            try {
                console.log('Fetching servers from API...');
                const response = await fetch('/admin/api/servers');
                if (!response.ok) {
                    const errorText = await response.text();
                    console.error('API error response:', errorText);
                    throw new Error(`API error: ${response.status} ${response.statusText}`);
                }
                const data = await response.json();
                console.log('Received server data:', data);
                
                if (!data.data) {
                    throw new Error('Invalid server data format');
                }
                
                allServers = data.data;
                console.log(`Loaded ${allServers.length} servers`);
                
                updateDashboardStats();
                filterServers();
                showNotification('Servers loaded successfully', 'success');
            } catch (error) {
                console.error('Error loading servers:', error);
                showNotification('Failed to load servers: ' + error.message, 'error');
                
                // Show error in table
                const tbody = document.getElementById('serversTableBody');
                tbody.innerHTML = `
                    <tr>
                        <td colspan="5" class="p-8 text-center text-red-400">
                            <div class="flex flex-col items-center space-y-4">
                                <div class="w-16 h-16 rounded-full bg-red-500/10 flex items-center justify-center">
                                    <i class="fas fa-exclamation-circle text-red-500 text-2xl"></i>
                                </div>
                                <p>Failed to load servers</p>
                                <p class="text-sm">${error.message}</p>
                                <button onclick="loadServers()" class="px-4 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-700 text-white transition-all">
                                    Retry
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            }
        }

        // Update dashboard statistics
        function updateDashboardStats() {
            const totalCount = allServers.length;
            const activeCount = allServers.filter(server => !server.attributes.suspended).length;
            const suspendedCount = totalCount - activeCount;
            
            // Update counters
            document.getElementById('totalServers').textContent = totalCount;
            document.getElementById('activeServers').textContent = activeCount;
            document.getElementById('suspendedServers').textContent = suspendedCount;
            
            // Update progress bars
            document.getElementById('serversBar').style.width = '100%';
            document.getElementById('activeServersBar').style.width = totalCount > 0 ? (activeCount / totalCount * 100) + '%' : '0%';
            document.getElementById('suspendedServersBar').style.width = totalCount > 0 ? (suspendedCount / totalCount * 100) + '%' : '0%';
            
            // System load (mock data)
            const systemLoad = Math.floor(Math.random() * 30) + 20;
            document.getElementById('systemLoad').textContent = `${systemLoad}%`;
            document.getElementById('systemLoadBar').style.width = `${systemLoad}%`;
        }

        // Filter servers based on search and filter criteria
        function filterServers() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const resourceFilter = document.getElementById('resourceFilter').value;
            
            filteredServers = allServers.filter(server => {
                const nameMatch = server.attributes.name.toLowerCase().includes(searchTerm);
                const idMatch = server.attributes.identifier.toLowerCase().includes(searchTerm);
                const ownerMatch = server.attributes.user.username.toLowerCase().includes(searchTerm);
                const searchMatch = nameMatch || idMatch || ownerMatch;
                
                let statusMatch = true;
                if (statusFilter === 'active') statusMatch = !server.attributes.suspended;
                if (statusFilter === 'suspended') statusMatch = server.attributes.suspended;
                
                let resourceMatch = true;
                if (resourceFilter === 'high-ram') resourceMatch = server.attributes.limits.memory > 2048;
                if (resourceFilter === 'high-cpu') resourceMatch = server.attributes.limits.cpu > 100;
                if (resourceFilter === 'high-disk') resourceMatch = server.attributes.limits.disk > 10240;
                
                return searchMatch && statusMatch && resourceMatch;
            });
            
            // Update count display
            document.getElementById('filteredCount').textContent = filteredServers.length;
            document.getElementById('totalCount').textContent = allServers.length;
            document.getElementById('totalItems').textContent = filteredServers.length;
            
            // Reset pagination to first page
            currentPage = 1;
            renderPagination();
            renderServerTable();
        }

        // Render the server table
        function renderServerTable() {
            const tbody = document.getElementById('serversTableBody');
            tbody.innerHTML = '';
            
            // Calculate pagination
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, filteredServers.length);
            const serversToShow = filteredServers.slice(startIndex, endIndex);
            
            // Update pagination display
            document.getElementById('currentRange').textContent = 
                filteredServers.length > 0 ? `${startIndex + 1}-${endIndex}` : '0-0';
            
            // If no servers match filters
            if (serversToShow.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="5" class="p-8 text-center text-gray-400">
                            <div class="flex flex-col items-center space-y-4">
                                <div class="w-16 h-16 rounded-full bg-gray-800 flex items-center justify-center">
                                    <i class="fas fa-search text-gray-600 text-2xl"></i>
                                </div>
                                <p>No servers match your current filters</p>
                                <button onclick="resetFilters()" class="px-4 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-700 text-white transition-all">
                                    Reset Filters
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            // Render server rows
            serversToShow.forEach(server => {
                const row = document.createElement('tr');
                row.className = 'border-t border-gray-800 hover:bg-gray-800/50 transition-all';
                row.dataset.serverId = server.attributes.id;
                
                // Create status badge based on server status
                const statusBadge = server.attributes.suspended 
                    ? '<span class="px-2 py-1 rounded-lg bg-red-500/10 text-red-400 border border-red-500/20">Suspended</span>'
                    : '<span class="px-2 py-1 rounded-lg bg-green-500/10 text-green-400 border border-green-500/20">Active</span>';
                
                // Create memory usage indicator
                const memoryPercentage = Math.min((server.attributes.limits.memory / 4096) * 100, 100);
                const memoryColor = memoryPercentage > 75 ? 'bg-red-500' : memoryPercentage > 50 ? 'bg-yellow-500' : 'bg-green-500';
                
                // Create CPU usage indicator
                const cpuPercentage = Math.min((server.attributes.limits.cpu / 200) * 100, 100);
                const cpuColor = cpuPercentage > 75 ? 'bg-red-500' : cpuPercentage > 50 ? 'bg-yellow-500' : 'bg-green-500';
                
                // Create disk usage indicator
                const diskPercentage = Math.min((server.attributes.limits.disk / 20480) * 100, 100);
                const diskColor = diskPercentage > 75 ? 'bg-red-500' : diskPercentage > 50 ? 'bg-yellow-500' : 'bg-green-500';
                
                // Check if server is selected
                const isChecked = selectedServers.has(server.attributes.id) ? 'checked' : '';
                
                row.innerHTML = `
                    <td class="p-4">
                        <div class="flex items-center space-x-3">
                            <input type="checkbox" class="server-checkbox rounded bg-gray-700 border-gray-600 text-indigo-500 focus:ring-indigo-500/50" ${isChecked}>
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 rounded-xl bg-indigo-500/10 flex items-center justify-center">
                                    <i class="fas fa-server text-indigo-500"></i>
                                </div>
                                <div>
                                    <div class="font-medium">${server.attributes.name}</div>
                                    <div class="text-sm text-gray-400">${server.attributes.identifier}</div>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td class="p-4">
                        <div class="flex items-center space-x-2">
                            <div class="w-8 h-8 rounded-full bg-gray-800 flex items-center justify-center">
                                <i class="fas fa-user text-indigo-400"></i>
                            </div>
                            <div>
                                <div class="font-medium">${server.attributes.user.username}</div>
                                <div class="text-xs text-gray-400">ID: ${server.attributes.user.id}</div>
                            </div>
                        </div>
                    </td>
                    <td class="p-4">
                        <div class="space-y-2">
                            <div class="flex items-center space-x-2">
                                <div class="text-xs text-gray-400 w-12">RAM:</div>
                                <div class="w-full bg-gray-800 h-1.5 rounded-full">
                                    <div class="h-full rounded-full ${memoryColor}" style="width: ${memoryPercentage}%"></div>
                                </div>
                                <div class="text-xs">${(server.attributes.limits.memory / 1024).toFixed(1)} GB</div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <div class="text-xs text-gray-400 w-12">CPU:</div>
                                <div class="w-full bg-gray-800 h-1.5 rounded-full">
                                    <div class="h-full rounded-full ${cpuColor}" style="width: ${cpuPercentage}%"></div>
                                </div>
                                <div class="text-xs">${server.attributes.limits.cpu}%</div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <div class="text-xs text-gray-400 w-12">Disk:</div>
                                <div class="w-full bg-gray-800 h-1.5 rounded-full">
                                    <div class="h-full rounded-full ${diskColor}" style="width: ${diskPercentage}%"></div>
                                </div>
                                <div class="text-xs">${(server.attributes.limits.disk / 1024).toFixed(1)} GB</div>
                            </div>
                        </div>
                    </td>
                    <td class="p-4">
                        ${statusBadge}
                    </td>
                    <td class="p-4">
                        <div class="flex items-center space-x-1">
                            <button 
                                onclick="window.open('/admin/servers/${server.attributes.id}/edit', '_blank')" 
                                class="p-2 rounded-lg bg-gray-800 hover:bg-gray-700">
                                <i class="fas fa-edit text-indigo-400"></i>
                            </button>
                            <button 
                                onclick="openDeleteModal(${server.attributes.id})" 
                                class="p-2 rounded-lg bg-gray-800 hover:bg-gray-700">
                                <i class="fas fa-trash text-red-400"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            });
        }

        // Delete server modal
        function openDeleteModal(serverId) {
            serverToDelete = serverId;
            const modal = document.getElementById('deleteServerModal');
            modal.classList.remove('hidden');
        }
        
        function closeDeleteModal() {
            const modal = document.getElementById('deleteServerModal');
            modal.classList.add('hidden');
            serverToDelete = null;
        }
        
        async function deleteServer() {
            if (!serverToDelete) return;
            
            try {
                const response = await fetch(`/api/servers/${serverToDelete}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`Failed to delete server: ${response.status} ${response.statusText}`);
                }
                
                showNotification('Server deleted successfully', 'success');
                closeDeleteModal();
                loadServers(); // Reload the servers list
            } catch (error) {
                console.error('Error deleting server:', error);
                showNotification('Failed to delete server: ' + error.message, 'error');
            }
        }
    </script>
</body>
</html>